import test from 'ava';
import { getAsteroids, getTargets, get200th } from './functions';

test('Get asteroids for small map', t => {
    let input = `.#..#
    .....
    #####
    ....#
    ...##`;
    t.deepEqual(getAsteroids(input), { x: 3, y:4, asteroids: 8});
});

test('Get asteroids for medium map 1', t => {
    let input = `......#.#.
    #..#.#....
    ..#######.
    .#.#.###..
    .#..#.....
    ..#....#.#
    #..#....#.
    .##.#..###
    ##...#..#.
    .#....####`;
    t.deepEqual(getAsteroids(input), { x: 5, y:8, asteroids: 33});
});

test('Get asteroids for medium map 2', t => {
    let input = `#.#...#.#.
    .###....#.
    .#....#...
    ##.#.#.#.#
    ....#.#.#.
    .##..###.#
    ..#...##..
    ..##....##
    ......#...
    .####.###.`;
    t.deepEqual(getAsteroids(input), { x: 1, y:2, asteroids: 35});
});

test('Get asteroids for medium map 3', t => {
    let input = `.#..#..###
    ####.###.#
    ....###.#.
    ..###.##.#
    ##.##.#.#.
    ....###..#
    ..#.#..#.#
    #..#.#.###
    .##...##.#
    .....#.#..`;
    t.deepEqual(getAsteroids(input), { x: 6, y:3, asteroids: 41});
});

test('Get asteroids for large map', t => {
    let input = `.#..##.###...#######
    ##.############..##.
    .#.######.########.#
    .###.#######.####.#.
    #####.##.#.##.###.##
    ..#####..#.#########
    ####################
    #.####....###.#.#.##
    ##.#################
    #####.##.###..####..
    ..######..##.#######
    ####.##.####...##..#
    .#####..#.######.###
    ##...#.##########...
    #.##########.#######
    .####.#.###.###.#.##
    ....##.##.###..#####
    .#.#.###########.###
    #.#.#.#####.####.###
    ###.##.####.##.#..##`;
    t.deepEqual(getAsteroids(input), { x: 11, y:13, asteroids: 210});
});

test('Find number of targets', t => {
    let input = `.#....#####...#..
    ##...##.#####..##
    ##...#...#.#####.
    ..#.....X...###..
    ..#.#.....#....##`;

    t.is(getTargets(input, {x: 8, y: 3}).length, 36);
});

test('Describe location, degree, and distance to target', t=> {
    let input = `.#....#####...#..
    ##...##.#####..##
    ##...#...#.#####.
    ..#.....X...###..
    ..#.#.....#....##`;

    let firstTarget = {
        degrees: -172.8749836510982,
        distance: 8.06225774829855,
        x: 0,
        y: 2
    };

    t.deepEqual(getTargets(input, {x: 8, y: 3})[0], firstTarget);

});

test('Get 200th target with coords x*100+y', t=> {
    let input = `.#..##.###...#######
    ##.############..##.
    .#.######.########.#
    .###.#######.####.#.
    #####.##.#.##.###.##
    ..#####..#.#########
    ####################
    #.####....###.#.#.##
    ##.#################
    #####.##.###..####..
    ..######..##.#######
    ####.##.####...##..#
    .#####..#.######.###
    ##...#.##########...
    #.##########.#######
    .####.#.###.###.#.##
    ....##.##.###..#####
    .#.#.###########.###
    #.#.#.#####.####.###
    ###.##.####.##.#..##`;
    let targets = getTargets(input, {x:11, y:13});
    t.is(get200th(targets), 802);
});